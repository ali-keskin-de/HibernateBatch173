package com.tpe.hb02.embeddable;

import javax.persistence.Embeddable;


@Embeddable // bu classa karsilik bir tablo olusturma, baska bir tabloya bu classtaki fieldlar baksa bir tabloya eklenebilir
public class Address {

    private String street;

    private String city;

    private String country;

    private String zipCode;

    @Override
    public String toString() {
        return "Address{" +
                "street='" + street + '\'' +
                ", city='" + city + '\'' +
                ", country='" + country + '\'' +
                ", zipCode='" + zipCode + '\'' +
                '}';
    }

    //datalarÄ± fetch(getirirken) ettiÄŸinde Hibernate parametresiz const. kullanÄ±r.
    // Eger biz bir parametreli bir constructor yazarsak bu parametresiz default constructor ezer,
    // bu sebepten parametresiz constructor 'i biz elle yazmaliyiz yoksa get() methodlarimiz dogru calismaz
    /*
    ğŸ”¹ Hibernate ve Constructor KullanÄ±mÄ±
Hibernate, veritabanÄ±ndan bir entity'yi getirirken (Ã¶rneÄŸin get(), find(), load() gibi methodlarla), Java Reflection API kullanÄ±r. Bu API sayesinde Hibernate, sÄ±nÄ±fÄ±nÄ±zÄ±n nesnesini parametresiz (no-arg) constructor Ã¼zerinden oluÅŸturur.

ğŸ”¸ Parametreli Constructor YazarsanÄ±z Ne Olur?
Java'da siz herhangi bir constructor (parametreli) yazdÄ±ÄŸÄ±nÄ±zda, Java artÄ±k otomatik olarak default (parametresiz) constructor saÄŸlamaz. Bu durumda:

EÄŸer siz parametreli bir constructor yazdÄ±ysanÄ±z,

Ve ayrÄ±ca parametresiz constructor kendiniz yazmazsanÄ±z,

Hibernate, bu entity'yi oluÅŸturamaz ve get() gibi methodlar Ã§alÄ±ÅŸmaz (Ã¶rneÄŸin org.hibernate.InstantiationException hatasÄ± alÄ±rsÄ±nÄ±z).
     */

    public Address() {
    }

    //parametreli constructor
    public Address(String street, String city, String country, String zipCode) {
        this.street = street;
        this.city = city;
        this.country = country;
        this.zipCode = zipCode;
    }


    public String getStreet() {
        return street;
    }

    public void setStreet(String street) {
        this.street = street;
    }

    public String getCity() {
        return city;
    }

    public void setCity(String city) {
        this.city = city;
    }

    public String getCountry() {
        return country;
    }

    public void setCountry(String country) {
        this.country = country;
    }

    public String getZipCode() {
        return zipCode;
    }

    public void setZipCode(String zipCode) {
        this.zipCode = zipCode;
    }




}
